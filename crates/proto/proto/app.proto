syntax = "proto3";
package zed.messages;

message UpdateInviteInfo {
    string url = 1;
    uint32 count = 2;
}

message ShutdownRemoteServer {}

message Toast {
    uint64 project_id = 1;
    string notification_id = 2;
    string message = 3;
}

message HideToast {
    uint64 project_id = 1;
    string notification_id = 2;
}

message OpenServerSettings {
    uint64 project_id = 1;
}

// Request sent from the remote host to ask the local Zed app
// to open paths/urls in the current window (or a new one).
message RemoteCliOpen {
    // Local file system paths on the remote host, possibly using
    // path:line:column syntax. The local handler will canonicalize
    // and choose an appropriate window.
    repeated string paths = 1;

    // URLs such as zed://, file://, http(s):// or ssh://.
    repeated string urls = 2;

    // Pairs of file paths to diff.
    message DiffPair {
        string old_path = 1;
        string new_path = 2;
    }
    repeated DiffPair diff_paths = 3;

    // Wait for the opened items to close before returning.
    bool wait = 4;

    // If set, overrides default window selection behavior.
    optional bool open_new_workspace = 5;
}

message RemoteCliOpenResponse {
    // Exit status code semantics: 0 success, non-zero indicates failure.
    int32 status = 1;
    // Optional stderr/stdout text for diagnostics.
    string stderr = 2;
    string stdout = 3;
}

message GetCrashFiles {
}

message GetCrashFilesResponse {
    repeated CrashReport crashes = 1;
    reserved 2; // old panics
}

message CrashReport {
    reserved 1, 2;
    string metadata = 3;
    bytes minidump_contents = 4;
}

message Extension {
    string id = 1;
    string version = 2;
    bool dev = 3;
}

message SyncExtensions {
    repeated Extension extensions = 1;
}

message SyncExtensionsResponse {
    string tmp_dir = 1;
    repeated Extension missing_extensions = 2;
}

message InstallExtension {
    Extension extension = 1;
    string tmp_dir = 2;
}

message AskPassRequest {
    uint64 project_id = 1;
    reserved 2;
    uint64 repository_id = 3;
    uint64 askpass_id = 4;
    string prompt = 5;
}

message AskPassResponse {
    string response = 1;
}

message GetSupermavenApiKey {}

message GetSupermavenApiKeyResponse {
    string api_key = 1;
}
