interface dap {
    use common.{env-vars};

    record launch-request {
        program: string,
        cwd: option<string>,
        args: list<string>,
        envs: env-vars,
    }

    record attach-request {
        process-id: option<u32>,
    }

    variant debug-request {
        launch(launch-request),
        attach(attach-request)
    }

    record tcp-arguments {
        port: u16,
        host: u32,
        timeout: option<u64>,
    }

    record tcp-arguments-template {
        port: option<u16>,
        host: option<u32>,
        timeout: option<u64>,
    }

    record debug-task-definition {
        label: string,
        adapter: string,
        request: debug-request,
        initialize-args: option<string>,
        stop-on-entry: option<bool>,
        tcp-connection: option<tcp-arguments-template>,
    }

    enum start-debugging-request-arguments-request {
        launch,
        attach,
    }

    record start-debugging-request-arguments {
        configuration: string,
        request: start-debugging-request-arguments-request,
    }

    record debug-adapter-binary {
        command: string,
        arguments: list<string>,
        envs: env-vars,
        cwd: option<string>,
        connection: option<tcp-arguments>,
        request-args: start-debugging-request-arguments
    }
}
