use gpui::rgba;

use crate::{
    default_color_scales, Appearance, GitStatusColors, PlayerColor, PlayerColors, StatusColors,
    SyntaxTheme, SystemColors, Theme, ThemeColors, ThemeFamily, ThemeStyles,
};

pub fn synthwave_84() -> ThemeFamily {
    ThemeFamily {
        id: "161a14a0-533c-4df1-b909-2bac37ac807d".into(),
        name: "Synthwave 84".into(),
        author: "Robb Owen (robb0wen)".into(),
        themes: vec![Theme {
            id: "7a7102b7-8778-4c24-ba79-7407857b4f8c".into(),
            name: "Synthwave 84".into(),
            appearance: Appearance::Dark,
            styles: ThemeStyles {
                system: SystemColors {
                    transparent: rgba(0x00000000).into(),
                    mac_os_traffic_light_red: rgba(0xec6b5fff).into(),
                    mac_os_traffic_light_yellow: rgba(0xf3bf4dff).into(),
                    mac_os_traffic_light_green: rgba(0x61c454ff).into(),
                },
                colors: ThemeColors {
                    border: rgba(0x363a3fff).into(),
                    border_variant: rgba(0x2e3135ff).into(),
                    border_focused: rgba(0x004073ff).into(),
                    border_selected: rgba(0x004073ff).into(),
                    border_transparent: rgba(0x00000000).into(),
                    border_disabled: rgba(0x212225ff).into(),
                    elevated_surface_background: rgba(0x18191bff).into(),
                    surface_background: rgba(0x18191bff).into(),
                    background: rgba(0x252334ff).into(),
                    element_background: rgba(0x614d85ff).into(),
                    element_hover: rgba(0x272a2dff).into(),
                    element_active: rgba(0x2e3135ff).into(),
                    element_selected: rgba(0x2e3135ff).into(),
                    element_disabled: rgba(0xddeaf814).into(),
                    element_placeholder: rgba(0xb0b4baff).into(),
                    element_drop_target: rgba(0x1166fb18).into(),
                    ghost_element_background: rgba(0x00000000).into(),
                    ghost_element_hover: rgba(0x272a2dff).into(),
                    ghost_element_active: rgba(0x2e3135ff).into(),
                    ghost_element_selected: rgba(0x2e3135ff).into(),
                    ghost_element_disabled: rgba(0xddeaf814).into(),
                    text: rgba(0xffffffff).into(),
                    text_muted: rgba(0xb0b4baff).into(),
                    text_placeholder: rgba(0x767a83ff).into(),
                    text_disabled: rgba(0x696e77ff).into(),
                    text_accent: rgba(0x6fb8ffff).into(),
                    icon: rgba(0xb0b4baff).into(),
                    icon_muted: rgba(0x767a83ff).into(),
                    icon_disabled: rgba(0x696e77ff).into(),
                    icon_placeholder: rgba(0x767a83ff).into(),
                    icon_accent: rgba(0x6fb8ffff).into(),
                    status_bar_background: rgba(0x18191bff).into(),
                    title_bar_background: rgba(0x18191bff).into(),
                    toolbar_background: rgba(0x111113ff).into(),
                    tab_bar_background: rgba(0x18191bff).into(),
                    tab_inactive_background: rgba(0x252334ff).into(),
                    tab_active_background: rgba(0x111113ff).into(),
                    editor_background: rgba(0x111113ff).into(),
                    editor_gutter_background: rgba(0x111113ff).into(),
                    editor_subheader_background: rgba(0x18191bff).into(),
                    editor_active_line_background: rgba(0xddeaf814).into(),
                    editor_highlighted_line_background: rgba(0xd3edf81d).into(),
                    editor_line_number: rgba(0xddeaf814).into(),
                    editor_active_line_number: rgba(0xddeaf814).into(),
                    editor_invisible: rgba(0xd3edf81d).into(),
                    editor_wrap_guide: rgba(0xd3edf81d).into(),
                    editor_active_wrap_guide: rgba(0xd3edf81d).into(),
                    editor_document_highlight_read_background: rgba(0xd3edf81d).into(),
                    editor_document_highlight_write_background: rgba(0xd3edf81d).into(),
                    terminal_background: rgba(0x111113ff).into(),
                    terminal_ansi_bright_black: rgba(0x000000e6).into(),
                    terminal_ansi_bright_red: rgba(0xfe444fff).into(),
                    terminal_ansi_bright_green: rgba(0x71f1b7ff).into(),
                    terminal_ansi_bright_yellow: rgba(0xfede5cff).into(),
                    terminal_ansi_bright_blue: rgba(0x02edf9ff).into(),
                    terminal_ansi_bright_magenta: rgba(0xff7ddaff).into(),
                    terminal_ansi_bright_cyan: rgba(0x02edf9ff).into(),
                    terminal_ansi_bright_white: rgba(0xb0b4baff).into(),
                    terminal_ansi_black: rgba(0x000000f2).into(),
                    terminal_ansi_red: rgba(0xfe444fff).into(),
                    terminal_ansi_green: rgba(0x71f1b7ff).into(),
                    terminal_ansi_yellow: rgba(0xf3e70fff).into(),
                    terminal_ansi_blue: rgba(0x02edf9ff).into(),
                    terminal_ansi_magenta: rgba(0xff7ddaff).into(),
                    terminal_ansi_cyan: rgba(0x02edf9ff).into(),
                    terminal_ansi_white: rgba(0xedeef0ff).into(),
                },
                status: StatusColors {
                    conflict: rgba(0xff9592ff).into(),
                    created: rgba(0x70cf82ff).into(),
                    deleted: rgba(0xff9592ff).into(),
                    error: rgba(0xff9592ff).into(),
                    hidden: rgba(0xb0b4baff).into(),
                    ignored: rgba(0xb0b4baff).into(),
                    info: rgba(0x6fb8ffff).into(),
                    modified: rgba(0xf5e147ff).into(),
                    renamed: rgba(0x6fb8ffff).into(),
                    success: rgba(0x70cf82ff).into(),
                    warning: rgba(0xf5e147ff).into(),
                },
                git: GitStatusColors {
                    conflict: rgba(0xffa057ff).into(),
                    created: rgba(0x70cf82ff).into(),
                    deleted: rgba(0xff9592ff).into(),
                    ignored: rgba(0xb0b4baff).into(),
                    modified: rgba(0xf5e147ff).into(),
                    renamed: rgba(0x6fb8ffff).into(),
                },
                player: PlayerColors(vec![
                    PlayerColor {
                        cursor: rgba(0x000000ff).into(),
                        background: rgba(0x000000ff).into(),
                        selection: rgba(0x000000ff).into(),
                    },
                    PlayerColor {
                        cursor: rgba(0x000000ff).into(),
                        background: rgba(0x000000ff).into(),
                        selection: rgba(0x000000ff).into(),
                    },
                    PlayerColor {
                        cursor: rgba(0x000000ff).into(),
                        background: rgba(0x000000ff).into(),
                        selection: rgba(0x000000ff).into(),
                    },
                    PlayerColor {
                        cursor: rgba(0x000000ff).into(),
                        background: rgba(0x000000ff).into(),
                        selection: rgba(0x000000ff).into(),
                    },
                ]),
                syntax: SyntaxTheme {
                    highlights: vec![
                        ("attribute".into(), rgba(0x4ccce6ff).into()),
                        ("boolean".into(), rgba(0xff977dff).into()),
                        ("comment".into(), rgba(0xb0b4baff).into()),
                        ("comment.doc".into(), rgba(0xe0dffeff).into()),
                        ("constant".into(), rgba(0x8c323aff).into()),
                        ("constructor".into(), rgba(0x8c323aff).into()),
                        ("embedded".into(), rgba(0x8c323aff).into()),
                        ("emphasis".into(), rgba(0x8c323aff).into()),
                        ("emphasis.strong".into(), rgba(0x8c323aff).into()),
                        ("enum".into(), rgba(0x8c323aff).into()),
                        ("function".into(), rgba(0x8c323aff).into()),
                        ("hint".into(), rgba(0x8c323aff).into()),
                        ("keyword".into(), rgba(0xffa057ff).into()),
                        ("label".into(), rgba(0x8c323aff).into()),
                        ("link_text".into(), rgba(0x8c323aff).into()),
                        ("link_uri".into(), rgba(0x8c323aff).into()),
                        ("number".into(), rgba(0x8c323aff).into()),
                        ("operator".into(), rgba(0x8c323aff).into()),
                        ("predictive".into(), rgba(0x8c323aff).into()),
                        ("preproc".into(), rgba(0x8c323aff).into()),
                        ("primary".into(), rgba(0x8c323aff).into()),
                        ("property".into(), rgba(0x8c323aff).into()),
                        ("punctuation".into(), rgba(0xb0b4baff).into()),
                        ("punctuation.bracket".into(), rgba(0xb0b4baff).into()),
                        ("punctuation.delimiter".into(), rgba(0xb0b4baff).into()),
                        ("punctuation.list_marker".into(), rgba(0x6fb8ffff).into()),
                        ("punctuation.special".into(), rgba(0x8c323aff).into()),
                        ("string".into(), rgba(0x1ed8a3ff).into()),
                        ("string.escape".into(), rgba(0x8c323aff).into()),
                        ("string.regex".into(), rgba(0xff977dff).into()),
                        ("string.special".into(), rgba(0x8c323aff).into()),
                        ("string.special.symbol".into(), rgba(0x8c323aff).into()),
                        ("tag".into(), rgba(0x8c323aff).into()),
                        ("text.literal".into(), rgba(0x8c323aff).into()),
                        ("title".into(), rgba(0x8c323aff).into()),
                        ("type".into(), rgba(0x8c323aff).into()),
                        ("variable".into(), rgba(0x8c323aff).into()),
                        ("variable.special".into(), rgba(0x8c323aff).into()),
                        ("variant".into(), rgba(0x8c323aff).into()),
                    ],
                },
            },
        }],
        scales: default_color_scales(),
    }
}
