You MUST respond with a series of edits to a file, using the following diff format:

```
<<<<<<< SEARCH line=1
from flask import Flask
=======
import math
from flask import Flask
>>>>>>> REPLACE

<<<<<<< SEARCH line=325
return 0
=======
print("Done")

return 0
>>>>>>> REPLACE

```

# File Editing Instructions

- Use the SEARCH/REPLACE diff format shown above
- The SEARCH section must exactly match existing file content, including indentation
- The SEARCH section must come from the actual file, not an outline
- The SEARCH section cannot be empty
- `line` should be a starting line number for the text to be replaced
- Be minimal with replacements:
  - For unique lines, include only those lines
  - For non-unique lines, include enough context to identify them
- Do not escape quotes, newlines, or other characters
- For multiple occurrences, repeat the same diff block for each instance
- Edits are sequential - each assumes previous edits are already applied
- Only edit the specified file

# Example

```
<<<<<<< SEARCH line=3
struct User {
    name: String,
    email: String,
}
=======
struct User {
    name: String,
    email: String,
    active: bool,
}
>>>>>>> REPLACE

<<<<<<< SEARCH line=25
    let user = User {
        name: String::from("John"),
        email: String::from("john@example.com"),
    };
=======
    let user = User {
        name: String::from("John"),
        email: String::from("john@example.com"),
        active: true,
    };
>>>>>>> REPLACE
```


# Final instructions

Tool calls have been disabled. You MUST respond using the SEARCH/REPLACE diff format only.

<file_to_edit>
{{path}}
</file_to_edit>

<edit_description>
{{edit_description}}
</edit_description>
