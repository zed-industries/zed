#!/bin/bash

# Check if 'prompts' branch exists, create if not
if ! git show-ref --quiet refs/heads/prompts; then
    git branch prompts
fi

if [ "$1" = "link" ]; then
    # Remove existing link
    rm -f ~/.config/zed/prompt_overrides
    if [ "$2" = "--worktree" ]; then
    # Check if 'prompts' worktree exists
    if git worktree list | grep -q "../zed_prompts"; then
        echo "Worktree already exists."
    else
        # Create worktree if it doesn't exist
        git worktree add ../zed_prompts prompts || git worktree add ../zed_prompts -b prompts
    fi
    ln -sf "$(pwd)/../zed_prompts/assets/prompts" ~/.config/zed/prompt_overrides
    else
        ln -sf "$(pwd)/../prompts/assets/prompts" ~/.config/zed/prompt_overrides
    fi
elif [ "$1" = "unlink" ]; then
    # Remove symbolic link
    rm ~/.config/zed/prompt_overrides
else
    echo "This script helps you manage prompt overrides for Zed."
    echo "You can link this directory to have Zed use the contents of your current repo templates as your active prompts,"
    echo "or store your modifications in a separate Git worktree."
    echo
    echo "Usage: $0 [link [--worktree]|unlink]"
    echo
    echo "Options:"
    echo "  link               Create a symbolic link from ./assets/prompts to ~/.config/zed/prompt_overrides"
    echo "  link --worktree    Create a 'prompts' Git worktree in ../prompts, then link ../prompts/assets/prompts"
    echo "                     to ~/.config/zed/prompt_overrides"
    echo "  unlink             Remove the symbolic link at ~/.config/zed/prompt_overrides"
    exit 1
fi
