[
  // Standard Linux bindings
  {
    "bindings": {
      "shift-tab": "menu::SelectPrev",
      "home": "menu::SelectFirst",
      "pageup": "menu::SelectFirst",
      "shift-pageup": "menu::SelectFirst",
      "ctrl-p": "menu::SelectPrev",
      "tab": "menu::SelectNext",
      "end": "menu::SelectLast",
      "pagedown": "menu::SelectLast",
      "shift-pagedown": "menu::SelectFirst",
      "ctrl-n": "menu::SelectNext",
      "enter": "menu::Confirm",
      "ctrl-enter": "menu::SecondaryConfirm",
      "escape": "menu::Cancel",
      "ctrl-escape": "menu::Cancel",
      "ctrl-c": "menu::Cancel",
      "alt-enter": ["picker::ConfirmInput", { "secondary": false }],
      "ctrl-alt-enter": ["picker::ConfirmInput", { "secondary": true }],
      "ctrl-shift-w": "workspace::CloseWindow",
      "shift-escape": "workspace::ToggleZoom",
      "ctrl-o": "workspace::Open",
      "ctrl-=": "zed::IncreaseBufferFontSize",
      "ctrl-+": "zed::IncreaseBufferFontSize",
      "ctrl--": "zed::DecreaseBufferFontSize",
      "ctrl-0": "zed::ResetBufferFontSize",
      "ctrl-,": "zed::OpenSettings",
      "ctrl-q": "zed::Quit",
      "f11": "zed::ToggleFullScreen"
    }
  },
  {
    "context": "Picker || menu",
    "bindings": {
      "up": "menu::SelectPrev",
      "down": "menu::SelectNext"
    }
  },
  {
    "context": "Prompt",
    "bindings": {
      "left": "menu::SelectPrev",
      "right": "menu::SelectNext"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "escape": "editor::Cancel",
      "backspace": "editor::Backspace",
      "shift-backspace": "editor::Backspace",
      "delete": "editor::Delete",
      "tab": "editor::Tab",
      "shift-tab": "editor::TabPrev",
      "ctrl-k": "editor::CutToEndOfLine",
      // "ctrl-t": "editor::Transpose",
      "ctrl-backspace": "editor::DeleteToPreviousWordStart",
      "ctrl-delete": "editor::DeleteToNextWordEnd",
      "shift-delete": "editor::Cut",
      "ctrl-insert": "editor::Copy",
      "shift-insert": "editor::Paste",
      "ctrl-y": "editor::Redo",
      "ctrl-z": "editor::Undo",
      "ctrl-shift-z": "editor::Redo",
      "up": "editor::MoveUp",
      "ctrl-up": "editor::LineUp",
      "ctrl-down": "editor::LineDown",
      "pageup": "editor::MovePageUp",
      "alt-pageup": "editor::PageUp",
      "shift-pageup": "editor::SelectPageUp",
      "home": "editor::MoveToBeginningOfLine",
      "down": "editor::MoveDown",
      "pagedown": "editor::MovePageDown",
      "alt-pagedown": "editor::PageDown",
      "shift-pagedown": "editor::SelectPageDown",
      "end": "editor::MoveToEndOfLine",
      "left": "editor::MoveLeft",
      "right": "editor::MoveRight",
      "ctrl-left": "editor::MoveToPreviousWordStart",
      "ctrl-right": "editor::MoveToNextWordEnd",
      "ctrl-home": "editor::MoveToBeginning",
      "ctrl-end": "editor::MoveToEnd",
      "shift-up": "editor::SelectUp",
      "shift-down": "editor::SelectDown",
      "shift-left": "editor::SelectLeft",
      "shift-right": "editor::SelectRight",
      "ctrl-shift-left": "editor::SelectToPreviousWordStart", // cursorWordLeftSelect
      "ctrl-shift-right": "editor::SelectToNextWordEnd", // cursorWordRightSelect
      "ctrl-shift-home": "editor::SelectToBeginning",
      "ctrl-shift-end": "editor::SelectToEnd",
      "ctrl-a": "editor::SelectAll",
      "ctrl-l": "editor::SelectLine",
      "ctrl-shift-i": "editor::Format",
      // "cmd-shift-left": ["editor::SelectToBeginningOfLine", {"stop_at_soft_wraps": true }],
      "shift-home": ["editor::SelectToBeginningOfLine", { "stop_at_soft_wraps": true }],
      // "ctrl-shift-a": ["editor::SelectToBeginningOfLine", { "stop_at_soft_wraps": true }],
      // "cmd-shift-right": ["editor::SelectToEndOfLine", { "stop_at_soft_wraps": true }],
      "shift-end": ["editor::SelectToEndOfLine", { "stop_at_soft_wraps": true }],
      // "ctrl-shift-e": ["editor::SelectToEndOfLine", { "stop_at_soft_wraps": true }],
      // "alt-v": ["editor::MovePageUp", { "center_cursor": true }],
      "ctrl-alt-space": "editor::ShowCharacterPalette",
      "ctrl-;": "editor::ToggleLineNumbers",
      "ctrl-k ctrl-r": "editor::RevertSelectedHunks",
      "ctrl-'": "editor::ToggleHunkDiff",
      "ctrl-\"": "editor::ExpandAllHunkDiffs",
      "ctrl-i": "editor::ShowSignatureHelp",
      "alt-g b": "editor::ToggleGitBlame"
    }
  },
  {
    // Separate block with same context so these display in context menus
    "context": "Editor",
    "bindings": {
      "ctrl-x": "editor::Cut",
      "ctrl-c": "editor::Copy",
      "ctrl-v": "editor::Paste"
    }
  },
  {
    "context": "Editor && mode == full",
    "bindings": {
      "enter": "editor::Newline",
      "shift-enter": "editor::Newline",
      "ctrl-enter": "editor::NewlineAbove",
      "ctrl-shift-enter": "editor::NewlineBelow",
      "alt-z": "editor::ToggleSoftWrap",
      "ctrl-f": "buffer_search::Deploy",
      "ctrl-h": ["buffer_search::Deploy", { "replace_enabled": true }],
      // "cmd-e": ["buffer_search::Deploy", { "focus": false }],
      "ctrl->": "assistant::QuoteSelection",
      "ctrl-<": "assistant::InsertIntoEditor",
      "ctrl-alt-e": "editor::SelectEnclosingSymbol"
    }
  },
  {
    "context": "Editor && mode == full && inline_completion",
    "bindings": {
      "alt-]": "editor::NextInlineCompletion",
      "alt-[": "editor::PreviousInlineCompletion",
      "ctrl-right": "editor::AcceptPartialInlineCompletion"
    }
  },
  {
    "context": "Editor && !inline_completion",
    "bindings": {
      "alt-\\": "editor::ShowInlineCompletion"
    }
  },
  {
    "context": "Editor && mode == auto_height",
    "bindings": {
      "ctrl-enter": "editor::Newline",
      "shift-enter": "editor::Newline",
      "ctrl-shift-enter": "editor::NewlineBelow"
    }
  },
  {
    "context": "Markdown",
    "bindings": {
      "ctrl-c": "markdown::Copy"
    }
  },
  {
    "context": "AssistantPanel",
    "bindings": {
      "ctrl-g": "search::SelectNextMatch",
      "ctrl-shift-g": "search::SelectPrevMatch",
      "alt-m": "assistant::ToggleModelSelector",
      "ctrl-k h": "assistant::DeployHistory",
      "ctrl-k l": "assistant::DeployPromptLibrary"
    }
  },
  {
    "context": "PromptLibrary",
    "bindings": {
      "ctrl-n": "prompt_library::NewPrompt",
      "ctrl-shift-s": "prompt_library::ToggleDefaultPrompt"
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      "escape": "buffer_search::Dismiss",
      "tab": "buffer_search::FocusEditor",
      "enter": "search::SelectNextMatch",
      "shift-enter": "search::SelectPrevMatch",
      "alt-enter": "search::SelectAllMatches",
      "ctrl-f": "search::FocusSearch",
      "ctrl-h": "search::ToggleReplace",
      "ctrl-l": "search::ToggleSelection"
    }
  },
  {
    "context": "BufferSearchBar && in_replace",
    "bindings": {
      "enter": "search::ReplaceNext",
      "ctrl-enter": "search::ReplaceAll"
    }
  },
  {
    "context": "BufferSearchBar && !in_replace > Editor",
    "bindings": {
      "up": "search::PreviousHistoryQuery",
      "down": "search::NextHistoryQuery"
    }
  },
  {
    "context": "ProjectSearchBar",
    "bindings": {
      "escape": "project_search::ToggleFocus",
      "ctrl-shift-f": "search::FocusSearch",
      "ctrl-shift-h": "search::ToggleReplace",
      "alt-ctrl-g": "search::ToggleRegex",
      "alt-ctrl-x": "search::ToggleRegex"
    }
  },
  {
    "context": "ProjectSearchBar > Editor",
    "bindings": {
      "up": "search::PreviousHistoryQuery",
      "down": "search::NextHistoryQuery"
    }
  },
  {
    "context": "ProjectSearchBar && in_replace > Editor",
    "bindings": {
      "enter": "search::ReplaceNext",
      "ctrl-alt-enter": "search::ReplaceAll"
    }
  },
  {
    "context": "ProjectSearchView",
    "bindings": {
      "escape": "project_search::ToggleFocus",
      "ctrl-shift-h": "search::ToggleReplace",
      "alt-ctrl-g": "search::ToggleRegex",
      "alt-ctrl-x": "search::ToggleRegex"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "ctrl-pageup": "pane::ActivatePrevItem",
      "ctrl-pagedown": "pane::ActivateNextItem",
      "ctrl-w": "pane::CloseActiveItem",
      "ctrl-f4": "pane::CloseActiveItem",
      "alt-ctrl-t": "pane::CloseInactiveItems",
      "alt-ctrl-shift-w": "workspace::CloseInactiveTabsAndPanes",
      "ctrl-k u": "pane::CloseCleanItems",
      "ctrl-k w": "pane::CloseAllItems",
      "ctrl-shift-f": "project_search::ToggleFocus",
      "ctrl-alt-g": "search::SelectNextMatch",
      "ctrl-alt-shift-g": "search::SelectPrevMatch",
      "ctrl-alt-shift-h": "search::ToggleReplace",
      "ctrl-alt-shift-l": "search::ToggleSelection",
      "alt-enter": "search::SelectAllMatches",
      "alt-c": "search::ToggleCaseSensitive",
      "alt-w": "search::ToggleWholeWord",
      "alt-r": "search::ToggleRegex",
      "alt-ctrl-f": "project_search::ToggleFilters",
      "ctrl-alt-shift-r": "search::ToggleRegex",
      "ctrl-alt-shift-x": "search::ToggleRegex"
    }
  },
  // Bindings from VS Code
  {
    "context": "Editor",
    "bindings": {
      "ctrl-[": "editor::Outdent",
      "ctrl-]": "editor::Indent",
      "shift-alt-up": "editor::AddSelectionAbove", // Insert Cursor Above
      "shift-alt-down": "editor::AddSelectionBelow", // Insert Cursor Below
      "ctrl-shift-k": "editor::DeleteLine",
      "alt-up": "editor::MoveLineUp",
      "alt-down": "editor::MoveLineDown",
      "ctrl-alt-shift-up": "editor::DuplicateLineUp",
      "ctrl-alt-shift-down": "editor::DuplicateLineDown",
      "alt-shift-right": "editor::SelectLargerSyntaxNode", // Expand Selection
      "alt-shift-left": "editor::SelectSmallerSyntaxNode", // Shrink Selection
      "ctrl-shift-l": "editor::SelectAllMatches", // Select all occurrences of current selection
      "ctrl-f2": "editor::SelectAllMatches", // Select all occurrences of current word
      "ctrl-d": ["editor::SelectNext", { "replace_newest": false }],
      "ctrl-shift-down": ["editor::SelectNext", { "replace_newest": false }], // Add selection to Next Find Match
      "ctrl-shift-up": ["editor::SelectPrevious", { "replace_newest": false }],
      "ctrl-k ctrl-d": ["editor::SelectNext", { "replace_newest": true }],
      "ctrl-k ctrl-shift-d": ["editor::SelectPrevious", { "replace_newest": true }],
      "ctrl-k ctrl-i": "editor::Hover",
      "ctrl-/": ["editor::ToggleComments", { "advance_downwards": false }],
      "ctrl-u": "editor::UndoSelection",
      "ctrl-shift-u": "editor::RedoSelection",
      "f8": "editor::GoToDiagnostic",
      "shift-f8": "editor::GoToPrevDiagnostic",
      "f2": "editor::Rename",
      "f12": "editor::GoToDefinition",
      "alt-f12": "editor::GoToDefinitionSplit",
      "ctrl-shift-f10": "editor::GoToDefinitionSplit",
      "ctrl-f12": "editor::GoToTypeDefinition",
      "shift-f12": "editor::GoToImplementation",
      "alt-ctrl-f12": "editor::GoToTypeDefinitionSplit",
      "alt-shift-f12": "editor::FindAllReferences",
      "ctrl-m": "editor::MoveToEnclosingBracket",
      "ctrl-shift-\\": "editor::MoveToEnclosingBracket",
      "ctrl-shift-[": "editor::Fold",
      "ctrl-shift-]": "editor::UnfoldLines",
      "ctrl-space": "editor::ShowCompletions",
      "ctrl-.": "editor::ToggleCodeActions",
      "alt-ctrl-r": "editor::RevealInFileManager",
      "ctrl-k r": "editor::RevealInFileManager",
      "ctrl-k p": "editor::CopyPath",
      "ctrl-\\": "pane::SplitRight",
      "ctrl-k v": "markdown::OpenPreviewToTheSide",
      "ctrl-shift-v": "markdown::OpenPreview",
      "ctrl-alt-shift-c": "editor::DisplayCursorNames"
    }
  },
  {
    "context": "Editor && mode == full",
    "bindings": {
      "ctrl-shift-o": "outline::Toggle",
      "ctrl-g": "go_to_line::Toggle"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "alt-1": ["pane::ActivateItem", 0],
      "alt-2": ["pane::ActivateItem", 1],
      "alt-3": ["pane::ActivateItem", 2],
      "alt-4": ["pane::ActivateItem", 3],
      "alt-5": ["pane::ActivateItem", 4],
      "alt-6": ["pane::ActivateItem", 5],
      "alt-7": ["pane::ActivateItem", 6],
      "alt-8": ["pane::ActivateItem", 7],
      "alt-9": ["pane::ActivateItem", 8],
      "alt-0": "pane::ActivateLastItem",
      "ctrl-alt--": "pane::GoBack",
      "ctrl-alt-_": "pane::GoForward",
      "ctrl-shift-t": "pane::ReopenClosedItem",
      "f3": "search::SelectNextMatch",
      "shift-f3": "search::SelectPrevMatch",
      "ctrl-shift-f": "project_search::ToggleFocus"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      // Change the default action on `menu::Confirm` by setting the parameter
      // "alt-ctrl-o": ["projects::OpenRecent", { "create_new_window": true }],
      "alt-ctrl-o": "projects::OpenRecent",
      "alt-ctrl-shift-b": "branches::OpenRecent",
      "ctrl-~": "workspace::NewTerminal",
      "ctrl-s": "workspace::Save",
      "ctrl-k s": "workspace::SaveWithoutFormat",
      "ctrl-shift-s": "workspace::SaveAs",
      "ctrl-n": "workspace::NewFile",
      "ctrl-shift-n": "workspace::NewWindow",
      "ctrl-`": "terminal_panel::ToggleFocus",
      "alt-1": ["workspace::ActivatePane", 0],
      "alt-2": ["workspace::ActivatePane", 1],
      "alt-3": ["workspace::ActivatePane", 2],
      "alt-4": ["workspace::ActivatePane", 3],
      "alt-5": ["workspace::ActivatePane", 4],
      "alt-6": ["workspace::ActivatePane", 5],
      "alt-7": ["workspace::ActivatePane", 6],
      "alt-8": ["workspace::ActivatePane", 7],
      "alt-9": ["workspace::ActivatePane", 8],
      "ctrl-alt-b": "workspace::ToggleRightDock",
      "ctrl-b": "workspace::ToggleLeftDock",
      "ctrl-j": "workspace::ToggleBottomDock",
      "ctrl-alt-y": "workspace::CloseAllDocks",
      "ctrl-shift-f": "pane::DeploySearch",
      "ctrl-shift-h": ["pane::DeploySearch", { "replace_enabled": true }],
      "ctrl-k ctrl-s": "zed::OpenKeymap",
      "ctrl-k ctrl-t": "theme_selector::Toggle",
      "ctrl-t": "project_symbols::Toggle",
      "ctrl-p": "file_finder::Toggle",
      "ctrl-tab": "tab_switcher::Toggle",
      "ctrl-shift-tab": ["tab_switcher::Toggle", { "select_last": true }],
      "ctrl-e": "file_finder::Toggle",
      "ctrl-shift-p": "command_palette::Toggle",
      "f1": "command_palette::Toggle",
      "ctrl-shift-m": "diagnostics::Deploy",
      "ctrl-shift-e": "project_panel::ToggleFocus",
      "ctrl-shift-b": "outline_panel::ToggleFocus",
      "ctrl-?": "assistant::ToggleFocus",
      "ctrl-alt-s": "workspace::SaveAll",
      "ctrl-k m": "language_selector::Toggle",
      "escape": "workspace::Unfollow",
      "ctrl-k ctrl-left": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-k ctrl-right": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k ctrl-up": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-k ctrl-down": ["workspace::ActivatePaneInDirection", "Down"],
      "ctrl-k shift-left": ["workspace::SwapPaneInDirection", "Left"],
      "ctrl-k shift-right": ["workspace::SwapPaneInDirection", "Right"],
      "ctrl-k shift-up": ["workspace::SwapPaneInDirection", "Up"],
      "ctrl-k shift-down": ["workspace::SwapPaneInDirection", "Down"],
      "ctrl-shift-x": "zed::Extensions",
      "alt-t": "task::Rerun",
      "alt-shift-t": "task::Spawn"
    }
  },
  // Bindings from Sublime Text
  {
    "context": "Editor",
    "bindings": {
      "ctrl-shift-k": "editor::DeleteLine",
      "ctrl-shift-d": "editor::DuplicateLineDown",
      "ctrl-shift-j": "editor::JoinLines",
      "ctrl-alt-backspace": "editor::DeleteToPreviousSubwordStart",
      "ctrl-alt-h": "editor::DeleteToPreviousSubwordStart",
      "ctrl-alt-delete": "editor::DeleteToNextSubwordEnd",
      "ctrl-alt-d": "editor::DeleteToNextSubwordEnd",
      "ctrl-alt-left": "editor::MoveToPreviousSubwordStart",
      // "ctrl-alt-b": "editor::MoveToPreviousSubwordStart",
      "ctrl-alt-right": "editor::MoveToNextSubwordEnd",
      "ctrl-alt-f": "editor::MoveToNextSubwordEnd",
      "ctrl-alt-shift-left": "editor::SelectToPreviousSubwordStart",
      "ctrl-alt-shift-b": "editor::SelectToPreviousSubwordStart",
      "ctrl-alt-shift-right": "editor::SelectToNextSubwordEnd",
      "ctrl-alt-shift-f": "editor::SelectToNextSubwordEnd"
    }
  },
  // Bindings from Atom
  {
    "context": "Pane",
    "bindings": {
      "ctrl-k up": "pane::SplitUp",
      "ctrl-k down": "pane::SplitDown",
      "ctrl-k left": "pane::SplitLeft",
      "ctrl-k right": "pane::SplitRight"
    }
  },
  // Bindings that should be unified with bindings for more general actions
  {
    "context": "Editor && renaming",
    "bindings": {
      "enter": "editor::ConfirmRename"
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      "enter": "editor::ConfirmCompletion",
      "tab": "editor::ComposeCompletion"
    }
  },
  {
    "context": "Editor && inline_completion && !showing_completions",
    "bindings": {
      "tab": "editor::AcceptInlineCompletion"
    }
  },
  {
    "context": "Editor && showing_code_actions",
    "bindings": {
      "enter": "editor::ConfirmCodeAction"
    }
  },
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "up": "editor::ContextMenuPrev",
      "ctrl-p": "editor::ContextMenuPrev",
      "down": "editor::ContextMenuNext",
      "ctrl-n": "editor::ContextMenuNext",
      "pageup": "editor::ContextMenuFirst",
      "pagedown": "editor::ContextMenuLast"
    }
  },
  // Custom bindings
  {
    "bindings": {
      "ctrl-alt-shift-f": "workspace::FollowNextCollaborator",
      "ctrl-alt-i": "zed::DebugElements",
      "ctrl-:": "editor::ToggleInlayHints"
    }
  },
  {
    "context": "!Terminal",
    "bindings": {
      "ctrl-shift-c": "collab_panel::ToggleFocus"
    }
  },
  {
    "context": "Editor && mode == full",
    "bindings": {
      "alt-enter": "editor::OpenExcerpts",
      "shift-enter": "editor::ExpandExcerpts",
      "ctrl-k enter": "editor::OpenExcerptsSplit",
      "ctrl-f8": "editor::GoToHunk",
      "ctrl-shift-f8": "editor::GoToPrevHunk",
      "ctrl-enter": "assistant::InlineAssist"
    }
  },
  {
    "context": "Editor && jupyter && !ContextEditor",
    "bindings": {
      "ctrl-shift-enter": "repl::Run",
      "ctrl-alt-enter": "repl::RunInPlace"
    }
  },
  {
    "context": "ContextEditor > Editor",
    "bindings": {
      "ctrl-enter": "assistant::Assist",
      "ctrl-s": "workspace::Save",
      "ctrl->": "assistant::QuoteSelection",
      "ctrl-<": "assistant::InsertIntoEditor",
      "shift-enter": "assistant::Split",
      "ctrl-r": "assistant::CycleMessageRole",
      "enter": "assistant::ConfirmCommand",
      "alt-enter": "editor::Newline"
    }
  },
  {
    "context": "ProjectSearchBar && !in_replace",
    "bindings": {
      "ctrl-enter": "project_search::SearchInNew"
    }
  },
  {
    "context": "OutlinePanel && not_editing",
    "bindings": {
      "escape": "menu::Cancel",
      "left": "outline_panel::CollapseSelectedEntry",
      "right": "outline_panel::ExpandSelectedEntry",
      "ctrl-alt-c": "outline_panel::CopyPath",
      "alt-ctrl-shift-c": "outline_panel::CopyRelativePath",
      "alt-ctrl-r": "outline_panel::RevealInFileManager",
      "space": ["outline_panel::Open", { "change_selection": false }],
      "shift-down": "menu::SelectNext",
      "shift-up": "menu::SelectPrev"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "left": "project_panel::CollapseSelectedEntry",
      "right": "project_panel::ExpandSelectedEntry",
      "ctrl-n": "project_panel::NewFile",
      "alt-ctrl-n": "project_panel::NewDirectory",
      "ctrl-insert": "project_panel::Copy",
      "shift-insert": "project_panel::Paste",
      "ctrl-alt-c": "project_panel::CopyPath",
      "alt-ctrl-shift-c": "project_panel::CopyRelativePath",
      "enter": "project_panel::Rename",
      "backspace": ["project_panel::Trash", { "skip_prompt": false }],
      "shift-delete": ["project_panel::Delete", { "skip_prompt": false }],
      "ctrl-backspace": ["project_panel::Delete", { "skip_prompt": false }],
      "ctrl-delete": ["project_panel::Delete", { "skip_prompt": false }],
      "alt-ctrl-r": "project_panel::RevealInFileManager",
      "alt-shift-f": "project_panel::NewSearchInDirectory",
      "shift-down": "menu::SelectNext",
      "shift-up": "menu::SelectPrev",
      "escape": "menu::Cancel"
    }
  },
  {
    // Separate block with same context so these display in context menus
    "context": "ProjectPanel",
    "bindings": {
      "f2": "project_panel::Rename",
      "ctrl-c": "project_panel::Copy",
      "ctrl-x": "project_panel::Cut",
      "ctrl-v": "project_panel::Paste",
      "delete": ["project_panel::Trash", { "skip_prompt": false }]
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space": "project_panel::Open"
    }
  },
  {
    "context": "CollabPanel && not_editing",
    "bindings": {
      "ctrl-backspace": "collab_panel::Remove",
      "space": "menu::Confirm"
    }
  },
  {
    "context": "(CollabPanel && editing) > Editor",
    "bindings": {
      "space": "collab_panel::InsertSpace"
    }
  },
  {
    "context": "ChannelModal",
    "bindings": {
      "tab": "channel_modal::ToggleMode"
    }
  },
  {
    "context": "Picker > Editor",
    "bindings": {
      "tab": "picker::ConfirmCompletion",
      "alt-enter": ["picker::ConfirmInput", { "secondary": false }]
    }
  },
  {
    "context": "ChannelModal > Picker > Editor",
    "bindings": {
      "tab": "channel_modal::ToggleMode"
    }
  },
  {
    "context": "FileFinder",
    "bindings": { "ctrl-shift-p": "file_finder::SelectPrev" }
  },
  {
    "context": "TabSwitcher",
    "bindings": {
      "ctrl-up": "menu::SelectPrev",
      "ctrl-down": "menu::SelectNext",
      "ctrl-shift-tab": "menu::SelectPrev",
      "ctrl-backspace": "tab_switcher::CloseSelectedItem"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-alt-space": "terminal::ShowCharacterPalette",
      "ctrl-insert": "terminal::Copy",
      "shift-insert": "terminal::Paste",
      "ctrl-enter": "assistant::InlineAssist",
      // Overrides for conflicting keybindings
      "ctrl-w": ["terminal::SendKeystroke", "ctrl-w"],
      "ctrl-shift-a": "editor::SelectAll",
      "ctrl-shift-f": "buffer_search::Deploy",
      "ctrl-shift-l": "terminal::Clear",
      "ctrl-shift-w": "pane::CloseActiveItem",
      "ctrl-e": ["terminal::SendKeystroke", "ctrl-e"],
      "up": ["terminal::SendKeystroke", "up"],
      "pageup": ["terminal::SendKeystroke", "pageup"],
      "down": ["terminal::SendKeystroke", "down"],
      "pagedown": ["terminal::SendKeystroke", "pagedown"],
      "escape": ["terminal::SendKeystroke", "escape"],
      "enter": ["terminal::SendKeystroke", "enter"],
      "ctrl-c": ["terminal::SendKeystroke", "ctrl-c"],
      "shift-pageup": "terminal::ScrollPageUp",
      "shift-pagedown": "terminal::ScrollPageDown",
      "shift-up": "terminal::ScrollLineUp",
      "shift-down": "terminal::ScrollLineDown",
      "shift-home": "terminal::ScrollToTop",
      "shift-end": "terminal::ScrollToBottom"
    }
  },
  {
    // Separate block with same context so these display in context menus
    "context": "Terminal",
    "bindings": {
      "ctrl-shift-c": "terminal::Copy",
      "ctrl-shift-v": "terminal::Paste"
    }
  }
]
